<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">

		<property name="location">
			<value>database.properties</value>
		</property>
	</bean>

	<camel:camelContext id="camel1"
		xmlns="http://camel.apache.org/schema/spring">
		<package>de.gzockoll.camel.solarmon</package>
	</camel:camelContext>

	<bean id="dbServer" class="de.gzockoll.camel.solarmon.HyperSqlDbServer">
		<constructor-arg>
			<value>
				server.database.0=file:./hsqldb/xdb
				server.dbname.0=xdb
				server.remote_open=true
				hsqldb.reconfig_logging=false
			</value>
		</constructor-arg>
	</bean>
	
	<!-- Just add a demo to show how to bind a date source for camel in Spring -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" depends-on="dbServer">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:hsql://localhost/xdb" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	<bean id="myEmf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="de.gzockoll.camel.solarmon.entity" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="${hibernate.show_sql}" />
				<property name="generateDdl" value="${jpa.generateDdl}" />
				<property name="databasePlatform" value="${persistence.dialect}" />
			</bean>
		</property>
	</bean>
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${driverClassName}" /> <property 
		name="url" value="${url}" /> <property name="username" value="restUser" /> 
		<property name="password" value="restmy5ql" /> </bean> -->

	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="myEmf" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
	<bean id="jpa" class="org.apache.camel.component.jpa.JpaComponent">
		<property name="entityManagerFactory" ref="myEmf" />
	</bean>
</beans>
